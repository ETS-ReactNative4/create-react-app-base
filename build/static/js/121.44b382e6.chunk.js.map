{"version":3,"sources":["styleGuide/examples/components/Popover/PopoverMulti.js"],"names":["PopoverItem","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","toggle","bind","_assertThisInitialized","state","popoverOpen","setState","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","components_Common__WEBPACK_IMPORTED_MODULE_1__","className","color","id","onClick","item","text","placement","isOpen","target","Component","PopoverMulti","_this2","popovers","map","popover","i","key","__webpack_exports__"],"mappings":"6rCAKMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,EAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAEDO,OAASN,EAAKM,OAAOC,KAAZC,IAAAR,KACdA,EAAKS,OACHC,aAAa,GALEV,6CAUjBE,KAAKS,UACHD,aAAcR,KAAKO,MAAMC,+CAK3B,OACEE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,GAAOC,UAAU,OAAOC,MAAM,YAAYC,GAAI,WAAahB,KAAKH,MAAMmB,GAAIC,QAASjB,KAAKI,QACtFJ,KAAKH,MAAMqB,KAAKC,MAEnBT,EAAAC,EAAAC,cAACC,EAAA,IACCO,UAAWpB,KAAKH,MAAMqB,KAAKE,UAC3BC,OAAQrB,KAAKO,MAAMC,YACnBc,OAAQ,WAAatB,KAAKH,MAAMmB,GAChCZ,OAAQJ,KAAKI,QACbM,EAAAC,EAAAC,cAACC,EAAA,GAAD,sBACAH,EAAAC,EAAAC,cAACC,EAAA,GAAD,gJA5BgBH,EAAAC,EAAMY,WAsC1BC,cACJ,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAA1B,EAAAC,KAAAwB,IACjBC,EAAAxB,EAAAD,KAAAE,EAAAsB,GAAArB,KAAAH,KAAMH,KAEDU,OACHmB,WAEIN,UAAW,MACXD,KAAM,QAGNC,UAAW,SACXD,KAAM,WAGNC,UAAW,OACXD,KAAM,SAGNC,UAAW,QACXD,KAAM,WAnBKM,6CA0BjB,OACEf,EAAAC,EAAAC,cAAA,WACGZ,KAAKO,MAAMmB,SAASC,IAAI,SAACC,EAASC,GACjC,OAAOnB,EAAAC,EAAAC,cAAChB,GAAYkC,IAAKD,EAAGX,KAAMU,EAASZ,GAAIa,qBA9B9BnB,EAAAC,EAAMY,WAqCjCQ,EAAA","file":"static/js/121.44b382e6.chunk.js","sourcesContent":["/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React from 'react'\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'components/Common'\n\nclass PopoverItem extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      popoverOpen: false\n    }\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    })\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Popover-' + this.props.id} onClick={this.toggle}>\n          {this.props.item.text}\n        </Button>\n        <Popover\n          placement={this.props.item.placement}\n          isOpen={this.state.popoverOpen}\n          target={'Popover-' + this.props.id}\n          toggle={this.toggle}>\n          <PopoverHeader>Popover Title</PopoverHeader>\n          <PopoverBody>\n            Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis\n            vestibulum.\n          </PopoverBody>\n        </Popover>\n      </span>\n    )\n  }\n}\n\nclass PopoverMulti extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      popovers: [\n        {\n          placement: 'top',\n          text: 'Top'\n        },\n        {\n          placement: 'bottom',\n          text: 'Bottom'\n        },\n        {\n          placement: 'left',\n          text: 'Left'\n        },\n        {\n          placement: 'right',\n          text: 'Right'\n        }\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.popovers.map((popover, i) => {\n          return <PopoverItem key={i} item={popover} id={i} />\n        })}\n      </div>\n    )\n  }\n}\n\nexport default PopoverMulti\n"],"sourceRoot":""}