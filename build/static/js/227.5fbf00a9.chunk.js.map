{"version":3,"sources":["components/Global/ThemeSelector.js","components/Global/LanguageSelector.js","components/Auth/UserSettings.js"],"names":["ThemeSelector","state","__WEBPACK_IMPORTED_MODULE_1_react__","this","setState","prevState","dropdownOpen","_this2","__WEBPACK_IMPORTED_MODULE_1_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_2__GlobalContainer__","Consumer","context","__WEBPACK_IMPORTED_MODULE_0_components_Common__","isOpen","toggle","nav","props","caret","user","theme","toUpperCase","onClick","updateUserByPropertyValue","defaultProps","__webpack_exports__","LanguageSelector","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_components_Common__","inNavbar","language","right","__WEBPACK_IMPORTED_MODULE_2_components_Global_GlobalImporter__","stringNames","render","_ref","strings","userSettings","__WEBPACK_IMPORTED_MODULE_3_components_Global_LanguageSelector__","__WEBPACK_IMPORTED_MODULE_4_components_Global_ThemeSelector__"],"mappings":"0qBAMMA,sTACJC,4UAD0BC,EAAA,yDAIxBC,KAAKC,SAAS,SAAAC,GAAA,OACZC,cAAeD,EAAUC,iDAIpB,IAAAC,EAAAJ,KACP,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAuBC,SAAxB,KACG,SAAAC,GAAA,OACCL,EAAAC,EAAAC,cAACI,EAAA,GAASC,OAAQR,EAAKN,MAAMK,aAAcU,OAAQ,kBAAMT,EAAKS,WAC5DR,EAAAC,EAAAC,cAACI,EAAA,GAAeG,IAAKV,EAAKW,MAAMD,IAAKE,OAAA,GAClCN,EAAQZ,MAAMmB,KAAKC,MAAMC,eAE5Bd,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,GAAaS,QAAS,kBAAMV,EAAQZ,MAAMuB,0BAA0B,QAAS,YAA9E,UAGAhB,EAAAC,EAAAC,cAACI,EAAA,GAAaS,QAAS,kBAAMV,EAAQZ,MAAMuB,0BAA0B,QAAS,YAA9E,UAGAhB,EAAAC,EAAAC,cAACI,EAAA,GAAaS,QAAS,kBAAMV,EAAQZ,MAAMuB,0BAA0B,QAAS,cAA9E,YAGAhB,EAAAC,EAAAC,cAACI,EAAA,GAAaS,QAAS,kBAAMV,EAAQZ,MAAMuB,0BAA0B,QAAS,UAA9E,iDASdxB,EAAcyB,cACZR,KAAK,GAOPS,EAAA,2pBC5CMC,sTACJ1B,4UAD6B2B,EAAA,yDAc3BzB,KAAKC,SAAS,SAAAC,GAAA,OACZC,cAAeD,EAAUC,iDAIpB,IAAAC,EAAAJ,KACP,OACE0B,EAAApB,EAAAC,cAACC,EAAA,EAAuBC,SAAxB,KACG,SAAAC,GAAA,OACCgB,EAAApB,EAAAC,cAACoB,EAAA,GAASf,OAAQR,EAAKN,MAAMK,aAAcU,OAAQ,kBAAMT,EAAKS,UAAUC,IAAKV,EAAKW,MAAMD,IAAKc,UAAA,GAC3FF,EAAApB,EAAAC,cAACoB,EAAA,GAAeb,IAAKV,EAAKW,MAAMD,IAAKE,OAAA,GAClCN,EAAQZ,MAAMmB,KAAKY,SAASV,eAE/BO,EAAApB,EAAAC,cAACoB,EAAA,GAAaG,MAAO1B,EAAKW,MAAMe,OAC9BJ,EAAApB,EAAAC,cAACoB,EAAA,GAAaP,QAAS,kBAAMV,EAAQZ,MAAMuB,0BAA0B,WAAY,QAAjF,WAGAK,EAAApB,EAAAC,cAACoB,EAAA,GAAaP,QAAS,kBAAMV,EAAQZ,MAAMuB,0BAA0B,WAAY,QAAjF,qDA/BRG,EAQGF,cACLR,KAAK,EACLgB,OAAO,GAgCXP,EAAA,2IClBAA,EAAA,QAvBqB,WACnB,OACEG,EAAApB,EAAAC,cAACwB,EAAA,GACCC,aAAc,gBACdC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAAAD,EAAYjB,KAClBS,EAAApB,EAAAC,cAACkB,EAAA,SAAD,KACEC,EAAApB,EAAAC,cAAA,UAAK4B,EAAQC,cACbV,EAAApB,EAAAC,cAACoB,EAAA,EAAD,KACED,EAAApB,EAAAC,cAACoB,EAAA,EAAD,KACED,EAAApB,EAAAC,cAACoB,EAAA,EAAD,KAAQQ,EAAQN,UAChBH,EAAApB,EAAAC,cAAC8B,EAAA,GAAiBvB,KAAK,EAAOgB,OAAO,KAEvCJ,EAAApB,EAAAC,cAACoB,EAAA,EAAD,KACED,EAAApB,EAAAC,cAACoB,EAAA,EAAD,KAAQQ,EAAQjB,OAChBQ,EAAApB,EAAAC,cAAC+B,EAAA,GAAcxB,KAAK","file":"static/js/227.5fbf00a9.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass ThemeSelector extends PureComponent {\n  state = {}\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()}>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.state.user.theme.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'custom')}>\n                Custom\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'darkly')}>\n                Darkly\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'original')}>\n                Original\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'yeti')}>Yeti</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nThemeSelector.defaultProps = {\n  nav: true\n}\n\nThemeSelector.propTypes = {\n  nav: PropTypes.bool\n}\n\nexport default ThemeSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/ThemeSelector.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass LanguageSelector extends PureComponent {\n  state = {}\n\n  static propTypes = {\n    nav: PropTypes.bool,\n    right: PropTypes.bool\n  }\n\n  static defaultProps = {\n    nav: true,\n    right: true\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()} nav={this.props.nav} inNavbar>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.state.user.language.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu right={this.props.right}>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'en')}>\n                English\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'ja')}>\n                Japanese\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default LanguageSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/LanguageSelector.js","import React, { Fragment } from 'react'\n\nimport { Form, FormGroup, Label } from 'components/Common'\nimport GlobalImporter from 'components/Global/GlobalImporter'\nimport LanguageSelector from 'components/Global/LanguageSelector'\nimport ThemeSelector from 'components/Global/ThemeSelector'\n\nconst UserSettings = () => {\n  return (\n    <GlobalImporter\n      stringNames={['userSettings']}\n      render={({ strings, user }) => (\n        <Fragment>\n          <h1>{strings.userSettings}</h1>\n          <Form>\n            <FormGroup>\n              <Label>{strings.language}</Label>\n              <LanguageSelector nav={false} right={false} />\n            </FormGroup>\n            <FormGroup>\n              <Label>{strings.theme}</Label>\n              <ThemeSelector nav={false} />\n            </FormGroup>\n          </Form>\n        </Fragment>\n      )}\n    />\n  )\n}\n\nexport default UserSettings\n\n// User Settings - Name, Email, Password, Language, Theme\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auth/UserSettings.js"],"sourceRoot":""}