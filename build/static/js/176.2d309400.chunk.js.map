{"version":3,"sources":["styleGuide/examples/components/Collapse/CollapseEvents.js"],"names":["CollapseEvents","props","_this","_classCallCheck","this","_getPrototypeOf","call","onEntering","bind","_assertThisInitialized","onEntered","onExiting","onExited","toggle","state","collapse","status","setState","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","components_Common__WEBPACK_IMPORTED_MODULE_1__","color","onClick","style","marginBottom","isOpen","timeout","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__"],"mappings":"yzBAGMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,MAAA,mGAAAC,CAAAC,KAAAJ,KACjBI,MAAAF,MAAAG,EAAAL,GAAAM,KAAAF,KAAMH,oDACDM,WAAaL,EAAKK,WAAWC,KAAhBC,IAAAP,KAClBA,EAAKQ,UAAYR,EAAKQ,UAAUF,KAAfC,IAAAP,KACjBA,EAAKS,UAAYT,EAAKS,UAAUH,KAAfC,IAAAP,KACjBA,EAAKU,SAAWV,EAAKU,SAASJ,KAAdC,IAAAP,KAChBA,EAAKW,OAASX,EAAKW,OAAOL,KAAZC,IAAAP,KACdA,EAAKY,OAAUC,UAAU,EAAOC,OAAQ,UAPvBd,8DAWjBE,KAAKa,UAAWD,OAAQ,mDAIxBZ,KAAKa,UAAWD,OAAQ,+CAIxBZ,KAAKa,UAAWD,OAAQ,kDAIxBZ,KAAKa,UAAWD,OAAQ,4CAIxBZ,KAAKa,UAAWF,UAAWX,KAAKU,MAAMC,4CAItC,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,GAAOC,MAAM,UAAUC,QAASnB,KAAKS,OAAQW,OAASC,aAAc,SAArE,UAGAP,EAAAC,EAAAC,cAAA,4BAAoBhB,KAAKU,MAAME,QAC/BE,EAAAC,EAAAC,cAACC,EAAA,GACCK,OAAQtB,KAAKU,MAAMC,SACnBR,WAAYH,KAAKG,WACjBG,UAAWN,KAAKM,UAChBC,UAAWP,KAAKO,UAChBC,SAAUR,KAAKQ,SACfe,QAAS,GACTT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,yZA9CiBO,EAAA,WAyD7BC,EAAA","file":"static/js/176.2d309400.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Collapse, Button, CardBody, Card } from 'components/Common'\n\nclass CollapseEvents extends Component {\n  constructor(props) {\n    super(props)\n    this.onEntering = this.onEntering.bind(this)\n    this.onEntered = this.onEntered.bind(this)\n    this.onExiting = this.onExiting.bind(this)\n    this.onExited = this.onExited.bind(this)\n    this.toggle = this.toggle.bind(this)\n    this.state = { collapse: false, status: 'Closed' }\n  }\n\n  onEntering() {\n    this.setState({ status: 'Opening...' })\n  }\n\n  onEntered() {\n    this.setState({ status: 'Opened' })\n  }\n\n  onExiting() {\n    this.setState({ status: 'Closing...' })\n  }\n\n  onExited() {\n    this.setState({ status: 'Closed' })\n  }\n\n  toggle() {\n    this.setState({ collapse: !this.state.collapse })\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>\n          Toggle\n        </Button>\n        <h5>Current state: {this.state.status}</h5>\n        <Collapse\n          isOpen={this.state.collapse}\n          onEntering={this.onEntering}\n          onEntered={this.onEntered}\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          timeout={0}>\n          <Card>\n            <CardBody>\n              Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim\n              keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    )\n  }\n}\n\nexport default CollapseEvents\n"],"sourceRoot":""}