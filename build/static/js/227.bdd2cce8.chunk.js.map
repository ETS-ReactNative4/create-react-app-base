{"version":3,"sources":["components/Global/LanguageSelector.js","components/Global/Header.js","components/Auth/Login.js"],"names":["LanguageSelector","state","__WEBPACK_IMPORTED_MODULE_0_react__","this","setState","prevState","dropdownOpen","_this2","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_2__GlobalContainer__","Consumer","context","__WEBPACK_IMPORTED_MODULE_1_components_Common__","isOpen","toggle","nav","props","inNavbar","caret","user","language","toUpperCase","right","onClick","updateUserByPropertyValue","defaultProps","__webpack_exports__","Header","_this","isLoginModalOpen","__WEBPACK_IMPORTED_MODULE_1_components_Global_GlobalContainer__","__WEBPACK_IMPORTED_MODULE_3_components_Common__","color","dark","fixed","expand","href","strings","routes","home","path","displayName","navbar","timeout","className","about","styleGuide","todo","firstName","lastName","userSettings","divider","logOut","toggleLoginModal","logIn","__WEBPACK_IMPORTED_MODULE_2_components_Global_LanguageSelector__","__WEBPACK_IMPORTED_MODULE_4_components_Auth_Login__","Login","email","password","login","_callee","__WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator___default","wrap","_context","prev","next","sent","stop","__WEBPACK_IMPORTED_MODULE_2_react__","input","target","name","value","key","__WEBPACK_IMPORTED_MODULE_2_react___default","__WEBPACK_IMPORTED_MODULE_4_components_Global_GlobalImporter__","stringNames","render","_ref3","__WEBPACK_IMPORTED_MODULE_3_components_Global_GlobalContainer__","isAuthenticated","for","type","id","placeholder","required","autoFocus","onChange","e","onKeyDown","passworkKeyDown","check","remember","block","userIsValid","userNamePasswordInvalid"],"mappings":"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","file":"static/js/227.bdd2cce8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass LanguageSelector extends PureComponent {\n  state = {}\n\n  static propTypes = {\n    nav: PropTypes.bool,\n    right: PropTypes.bool\n  }\n\n  static defaultProps = {\n    nav: true,\n    right: true\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()} nav={this.props.nav} inNavbar>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.state.user.language.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu right={this.props.right}>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'en')}>\n                English\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'ja')}>\n                Japanese\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default LanguageSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/LanguageSelector.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from 'components/Global/GlobalContainer'\nimport LanguageSelector from 'components/Global/LanguageSelector'\n\nimport {\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown\n} from 'components/Common'\nimport Login from 'components/Auth/Login'\n\nclass Header extends PureComponent {\n  state = {\n    isOpen: false\n  }\n\n  static propTypes = {\n    strings: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }))\n  }\n\n  toggleLoginModal() {\n    this.setState(prevState => ({\n      isLoginModalOpen: !prevState.isLoginModalOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <header>\n            <Navbar color=\"dark\" dark fixed=\"top\" expand=\"md\">\n              <NavbarBrand href={this.props.strings.routes.home.path}>\n                {this.props.strings.routes.home.displayName}\n              </NavbarBrand>\n              <NavbarToggler onClick={() => this.toggle()} />\n              <Collapse isOpen={this.state.isOpen} navbar timeout={0}>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.about.path}>\n                      {this.props.strings.routes.about.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.styleGuide.path}>\n                      {this.props.strings.routes.styleGuide.displayName}\n                    </NavLink>\n                  </NavItem>                  \n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.todo.path}>\n                      {this.props.strings.routes.todo.displayName}\n                    </NavLink>\n                  </NavItem>\n                  {this.props.user.firstName ? (\n                    <UncontrolledDropdown nav inNavbar>\n                      <DropdownToggle nav caret>\n                        {this.props.user.firstName} {this.props.user.lastName}\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem href={this.props.strings.routes.userSettings.path}>\n                          {this.props.strings.routes.userSettings.displayName}\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem onClick={() => context.state.logOut()}>{this.props.strings.logOut}</DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  ) : (\n                    <NavItem>\n                      <span className=\"nav-link cursor-pointer\" onClick={() => this.toggleLoginModal()}>\n                        {this.props.strings.logIn}\n                      </span>\n                    </NavItem>\n                  )}\n                  <LanguageSelector />\n                </Nav>\n              </Collapse>\n            </Navbar>`\n            <Modal isOpen={this.state.isLoginModalOpen} toggle={() => this.toggleLoginModal()}>\n              <ModalHeader toggle={() => this.toggleLoginModal()}>{this.props.strings.logIn}</ModalHeader>\n              <ModalBody>\n                <Login />\n              </ModalBody>\n            </Modal>\n          </header>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default Header\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/Header.js","import { Alert, Button, Form, FormGroup, Input, Label } from 'components/Common'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from 'components/Global/GlobalContainer'\nimport GlobalImporter from 'components/Global/GlobalImporter'\n\nclass Login extends PureComponent {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  onChange(input) {\n    this.setState({\n      [input.target.name]: input.target.value\n    })\n  }\n\n  login = async context => {\n    const userValid = await context.state.login({ email: this.state.email, password: this.state.password })\n    if (userValid) {\n      this.setState({\n        email: '',\n        password: ''\n      })\n    }\n  }\n\n  passworkKeyDown(input, context) {\n    if (input.key === 'Enter') {\n      this.login(context)\n    }\n  }\n\n  render() {\n    return (\n      <GlobalImporter\n        stringNames={['auth']}\n        render={({ strings, user }) => (\n          <GlobalContainerContext.Consumer>\n            {context => {\n              return !context.state.user.isAuthenticated ? (\n                <Form>\n                  <FormGroup>\n                    <Label for=\"inputEmail\">{strings.email}</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"inputEmail\"\n                      placeholder={strings.email}\n                      required=\"\"\n                      autoFocus=\"\"\n                      value={this.state.email}\n                      onChange={e => this.onChange(e)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"inputPassword\">{strings.password}</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"inputPassword\"\n                      placeholder={strings.password}\n                      required=\"\"\n                      value={this.state.password}\n                      onChange={e => this.onChange(e)}\n                      onKeyDown={e => this.passworkKeyDown(e, context)}\n                    />\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type=\"checkbox\" value=\"remember-me\" /> {strings.remember}\n                    </Label>\n                  </FormGroup>\n                  <Button block={true} className=\"mt-3\" color=\"primary\" onClick={() => this.login(context)}>\n                    {strings.logIn}\n                  </Button>\n                  {context.state.userIsValid === false && (\n                    <Alert color=\"danger\" className=\"mt-3\">\n                      {strings.userNamePasswordInvalid}\n                    </Alert>\n                  )}\n                </Form>\n              ) : (\n                <div className=\"text-center\">\n                  <Button onClick={() => context.state.logOut()}>\n                    {strings.logOut} {context.state.user.firstName} {context.state.user.lastName}\n                  </Button>\n                </div>\n              )\n            }}\n          </GlobalContainerContext.Consumer>\n        )}\n      />\n    )\n  }\n}\n\nexport default Login\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auth/Login.js"],"sourceRoot":""}