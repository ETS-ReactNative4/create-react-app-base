{"version":3,"sources":["components/Todo/Todo.js","components/Todo/TodoList.js","components/Todo/TodoContainer.js"],"names":["components_Todo_Todo","_ref","todo","react_default","a","createElement","style","textDecoration","completed","cursor","name","Todo_TodoList","todos","onClick","className","map","key","id","TodoContainer_TodoContainer","state","isLoaded","bindData","_callee","todosResponse","regenerator_default","wrap","_context","prev","next","dataHelper","get","apiConstants","TODO","BASE","sent","ok","_this","setState","data","error","statusText","stop","this","Common","react","__webpack_exports__"],"mappings":"mKAmBAA,EAhBa,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACd,OACEC,EAAAC,EAAAC,cAAA,QAAMC,OAASC,eAAgBL,EAAKM,UAAY,eAAiB,OAAQC,OAAQ,YAAcP,EAAKQ,OCuBxGC,EAvBiB,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,MAAOC,EAAVZ,EAAUY,QAAV,OACfV,EAAAC,EAAAC,cAAA,MAAIS,UAAU,QACXF,EAAMG,IAAI,SAAAb,GAAA,OACTC,EAAAC,EAAAC,cAAA,MAAIW,IAAKd,EAAKe,GAAIJ,QAASA,GACzBV,EAAAC,EAAAC,cAACL,GAAKE,KAAMA,ywBCDdgB,qRACJC,OACEC,UAAU,EACVR,YAGFS,uSAAW,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAApB,EAAAqB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACmBC,EAAA,EAAWC,IAAIC,EAAA,EAAIC,KAAKC,MAD3C,QACHV,EADGG,EAAAQ,MAESC,GAChBC,EAAKC,UACHjB,UAAU,EACVR,MAAOW,EAAce,OAGvBF,EAAKC,UACHjB,UAAU,EACVmB,MAAOhB,EAAciB,aAVhB,wBAAAd,EAAAe,SAAAnB,EAAAoB,gFAgBTA,KAAKrB,4CAIL,OACElB,EAAAC,EAAAC,cAACsC,EAAA,IAAOL,KAAMI,KAAKvB,MAAMP,MAAO2B,MAAOG,KAAKvB,MAAMoB,MAAOnB,SAAUsB,KAAKvB,MAAMC,UAC5EjB,EAAAC,EAAAC,cAACM,GAASC,MAAO8B,KAAKvB,MAAMP,UAAaC,QAAS,4NA5B9B+B,EAAA,eAkC5BC,EAAA","file":"static/js/216.40ebb049.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Todo = ({ todo }) => {\n  return (\n    <span style={{ textDecoration: todo.completed ? 'line-through' : 'none', cursor: 'pointer' }}>{todo.name}</span>\n  )\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    completed: PropTypes.bool,\n    createdDate: PropTypes.string,\n    modifiedDate: PropTypes.string\n  })\n}\n\nexport default Todo\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, onClick }) => (\n  <ul className=\"mt-2\">\n    {todos.map(todo => (\n      <li key={todo.id} onClick={onClick}>\n        <Todo todo={todo} />\n      </li>\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      completed: PropTypes.bool,\n      createdDate: PropTypes.string,\n      modifiedDate: PropTypes.string\n    }).isRequired\n  ).isRequired\n}\n\nexport default TodoList\n","import React, { PureComponent } from 'react'\nimport { Loader } from 'components/Common'\n\nimport dataHelper from 'helpers/dataHelper'\nimport API from 'config/apiConstants'\n\nimport TodoList from 'components/Todo/TodoList'\n\nclass TodoContainer extends PureComponent {\n  state = {\n    isLoaded: false,\n    todos: []\n  }\n\n  bindData = async () => {\n    const todosResponse = await dataHelper.get(API.TODO.BASE)\n    if (todosResponse.ok) {\n      this.setState({\n        isLoaded: true,\n        todos: todosResponse.data\n      })\n    } else {\n      this.setState({\n        isLoaded: true,\n        error: todosResponse.statusText\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.bindData()\n  }\n\n  render() {\n    return (\n      <Loader data={this.state.todos} error={this.state.error} isLoaded={this.state.isLoaded}>\n        <TodoList todos={this.state.todos || []} onClick={() => {}} />\n      </Loader>\n    )\n  }\n}\n\nexport default TodoContainer\n"],"sourceRoot":""}