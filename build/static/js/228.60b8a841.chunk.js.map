{"version":3,"sources":["components/Global/ThemeSelector.js","components/Global/LanguageSelector.js","components/Global/Header.js","components/Auth/LogIn.js"],"names":["ThemeSelector","state","__WEBPACK_IMPORTED_MODULE_1_react__","this","setState","prevState","dropdownOpen","_this2","__WEBPACK_IMPORTED_MODULE_1_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_2__GlobalContainer__","Consumer","context","__WEBPACK_IMPORTED_MODULE_0_components_Common__","isOpen","toggle","nav","props","caret","user","get","theme","toUpperCase","onClick","updateProperties","defaultProps","__webpack_exports__","LanguageSelector","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_components_Common__","inNavbar","language","right","Header","_this","islogInModalOpen","__WEBPACK_IMPORTED_MODULE_1_components_Global_GlobalContainer__","__WEBPACK_IMPORTED_MODULE_4_components_Common__","color","dark","fixed","expand","href","strings","routes","home","path","displayName","navbar","timeout","className","about","styleGuide","languageTester","todo","firstName","lastName","userSettings","divider","logOut","togglelogInModal","logIn","__WEBPACK_IMPORTED_MODULE_3_components_Global_ThemeSelector__","__WEBPACK_IMPORTED_MODULE_2_components_Global_LanguageSelector__","__WEBPACK_IMPORTED_MODULE_5_components_Auth_LogIn__","onLoggedIn","LogIn","defaultState","email","password","userIsValid","_callee","__WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator___default","wrap","_context","prev","next","sent","_objectSpread","stop","input","_defineProperty","target","name","value","key","__WEBPACK_IMPORTED_MODULE_4_components_Global_GlobalImporter__","stringNames","render","_ref3","__WEBPACK_IMPORTED_MODULE_3_components_Global_GlobalContainer__","__WEBPACK_IMPORTED_MODULE_2_components_Common__","for","type","id","placeholder","required","autoFocus","onChange","e","onKeyDown","passworkKeyDown","check","remember","block","userNamePasswordInvalid"],"mappings":"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","file":"static/js/228.60b8a841.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass ThemeSelector extends PureComponent {\n  state = {}\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()}>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.user.get().theme.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={() => context.user.updateProperties({ theme: 'custom' })}>Custom</DropdownItem>\n              <DropdownItem onClick={() => context.user.updateProperties({ theme: 'darkly' })}>Darkly</DropdownItem>\n              <DropdownItem onClick={() => context.user.updateProperties({ theme: 'original' })}>Original</DropdownItem>\n              <DropdownItem onClick={() => context.user.updateProperties({ theme: 'yeti' })}>Yeti</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nThemeSelector.defaultProps = {\n  nav: true\n}\n\nThemeSelector.propTypes = {\n  nav: PropTypes.bool\n}\n\nexport default ThemeSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/ThemeSelector.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass LanguageSelector extends PureComponent {\n  state = {}\n\n  static propTypes = {\n    nav: PropTypes.bool,\n    right: PropTypes.bool\n  }\n\n  static defaultProps = {\n    nav: true,\n    right: true\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()} nav={this.props.nav} inNavbar>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.user.get().language.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu right={this.props.right}>\n              <DropdownItem onClick={() => context.user.updateProperties({ language: 'en' })}>English</DropdownItem>\n              <DropdownItem onClick={() => context.user.updateProperties({ language: 'ja' })}>Japanese</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default LanguageSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/LanguageSelector.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from 'components/Global/GlobalContainer'\nimport LanguageSelector from 'components/Global/LanguageSelector'\nimport ThemeSelector from 'components/Global/ThemeSelector'\n\nimport {\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown\n} from 'components/Common'\nimport LogIn from 'components/Auth/LogIn'\n\nclass Header extends PureComponent {\n  state = {\n    isOpen: false\n  }\n\n  static propTypes = {\n    strings: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }))\n  }\n\n  togglelogInModal() {\n    this.setState(prevState => ({\n      islogInModalOpen: !prevState.islogInModalOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <header>\n            <Navbar color=\"dark\" dark fixed=\"top\" expand=\"md\">\n              <NavbarBrand href={this.props.strings.routes.home.path}>\n                {this.props.strings.routes.home.displayName}\n              </NavbarBrand>\n              <NavbarToggler onClick={() => this.toggle()} />\n              <Collapse isOpen={this.state.isOpen} navbar timeout={0}>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.about.path}>\n                      {this.props.strings.routes.about.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.styleGuide.path}>\n                      {this.props.strings.routes.styleGuide.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.languageTester.path}>\n                      {this.props.strings.routes.languageTester.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.todo.path}>\n                      {this.props.strings.routes.todo.displayName}\n                    </NavLink>\n                  </NavItem>\n                  {this.props.user.get().firstName ? (\n                    <UncontrolledDropdown nav inNavbar>\n                      <DropdownToggle nav caret>\n                        {this.props.user.get().firstName} {this.props.user.get().lastName}\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem href={this.props.strings.routes.userSettings.path}>\n                          {this.props.strings.routes.userSettings.displayName}\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem onClick={() => context.user.logOut()}>{this.props.strings.logOut}</DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  ) : (\n                    <NavItem>\n                      <span className=\"nav-link cursor-pointer\" onClick={() => this.togglelogInModal()}>\n                        {this.props.strings.logIn}\n                      </span>\n                    </NavItem>\n                  )}\n                  <NavItem>\n                    <ThemeSelector />\n                  </NavItem>\n                  <LanguageSelector />\n                </Nav>\n              </Collapse>\n            </Navbar>`\n            <Modal isOpen={this.state.islogInModalOpen} toggle={() => this.togglelogInModal()}>\n              <ModalHeader toggle={() => this.togglelogInModal()}>{this.props.strings.logIn}</ModalHeader>\n              <ModalBody>\n                <LogIn onLoggedIn={() => this.togglelogInModal()} />\n              </ModalBody>\n            </Modal>\n          </header>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default Header\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/Header.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Alert, Button, Form, FormGroup, Input, Label } from 'components/Common'\nimport { GlobalContainerContext } from 'components/Global/GlobalContainer'\nimport GlobalImporter from 'components/Global/GlobalImporter'\n\nclass LogIn extends PureComponent {\n  defaultState = {\n    email: '',\n    password: '',\n    userIsValid: true\n  }\n\n  state = {\n    ...this.defaultState\n  }\n\n  static propTypes = {\n    onLoggedIn: PropTypes.func\n  }\n\n  onChange(input) {\n    this.setState({\n      [input.target.name]: input.target.value\n    })\n  }\n\n  logIn = async context => {\n    const userValid = await context.user.logIn({ email: this.state.email, password: this.state.password })\n    if (userValid) {\n      this.setState({\n        ...this.defaultState\n      })\n      this.props.onLoggedIn()\n    } else {\n      this.setState({\n        userIsValid: false\n      })\n    }\n  }\n\n  passworkKeyDown(input, context) {\n    if (input.key === 'Enter') {\n      this.logIn(context)\n    }\n  }\n\n  render() {\n    return (\n      <GlobalImporter\n        stringNames={['auth']}\n        render={({ strings, user }) => (\n          <GlobalContainerContext.Consumer>\n            {context => {\n              return !context.user.get().email ? (\n                <Form>\n                  <FormGroup>\n                    <Label for=\"inputEmail\">{strings.email}</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"inputEmail\"\n                      placeholder={strings.email}\n                      required=\"\"\n                      autoFocus=\"\"\n                      value={this.state.email}\n                      onChange={e => this.onChange(e)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"inputPassword\">{strings.password}</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"inputPassword\"\n                      placeholder={strings.password}\n                      required=\"\"\n                      value={this.state.password}\n                      onChange={e => this.onChange(e)}\n                      onKeyDown={e => this.passworkKeyDown(e, context)}\n                    />\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type=\"checkbox\" /> {strings.remember}\n                    </Label>\n                  </FormGroup>\n                  <Button block={true} className=\"mt-3\" color=\"primary\" onClick={() => this.logIn(context)}>\n                    {strings.logIn}\n                  </Button>\n                  {this.state.userIsValid === false && (\n                    <Alert color=\"danger\" className=\"mt-3\">\n                      {strings.userNamePasswordInvalid}\n                    </Alert>\n                  )}\n                </Form>\n              ) : (\n                <div className=\"text-center\">\n                  <Button onClick={() => context.user.logOut()}>\n                    {strings.logOut} {context.user.get().firstName} {context.user.get().lastName}\n                  </Button>\n                </div>\n              )\n            }}\n          </GlobalContainerContext.Consumer>\n        )}\n      />\n    )\n  }\n}\n\nexport default LogIn\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auth/LogIn.js"],"sourceRoot":""}