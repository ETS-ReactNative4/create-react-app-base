(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{456:function(t,n,e){"use strict";e.r(n);n.default="import PropTypes from 'prop-types'\nimport React, { Fragment, PureComponent } from 'react'\n\nimport { Button, Tooltip } from 'components/Common'\n\nclass TooltipItem extends PureComponent {\n  state = {\n    tooltipOpen: false\n  }\n\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    item: PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right']).isRequired\n    })\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      tooltipOpen: !prevState.tooltipOpen\n    }))\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.item.text}\n        </Button>\n        <Tooltip\n          placement={this.props.item.placement}\n          isOpen={this.state.tooltipOpen}\n          target={'Tooltip-' + this.props.id}\n          toggle={() => this.toggle()}>\n          Tooltip Content!\n        </Tooltip>\n      </span>\n    )\n  }\n}\n\nconst TooltipMulti = () => {\n  const tooltips = [\n    {\n      placement: 'top',\n      text: 'Top'\n    },\n    {\n      placement: 'bottom',\n      text: 'Bottom'\n    },\n    {\n      placement: 'left',\n      text: 'Left'\n    },\n    {\n      placement: 'right',\n      text: 'Right'\n    }\n  ]\n\n  return (\n    <Fragment>\n      {tooltips.map((tooltip, i) => {\n        return <TooltipItem key={i} item={tooltip} id={i} />\n      })}\n    </Fragment>\n  )\n}\n\nexport default TooltipMulti\n"}}]);
//# sourceMappingURL=3.b23924bf.chunk.js.map