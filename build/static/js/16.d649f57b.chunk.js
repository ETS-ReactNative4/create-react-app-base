(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{469:function(e,n,o){"use strict";o.r(n);n.default="import PropTypes from 'prop-types'\nimport React, { Fragment, PureComponent } from 'react'\n\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'components/Common'\n\nclass PopoverItem extends PureComponent {\n  state = {\n    popoverOpen: false\n  }\n\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    item: PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right']).isRequired\n    })\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      popoverOpen: !prevState.popoverOpen\n    }))\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Popover-' + this.props.id} onClick={() => this.toggle()}>\n          {this.props.item.text}\n        </Button>\n        <Popover\n          placement={this.props.item.placement}\n          isOpen={this.state.popoverOpen}\n          target={'Popover-' + this.props.id}\n          toggle={() => this.toggle()}>\n          <PopoverHeader>Popover Title</PopoverHeader>\n          <PopoverBody>\n            Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis\n            vestibulum.\n          </PopoverBody>\n        </Popover>\n      </span>\n    )\n  }\n}\n\nconst PopoverMulti = () => {\n  const popovers = [\n    {\n      placement: 'top',\n      text: 'Top'\n    },\n    {\n      placement: 'bottom',\n      text: 'Bottom'\n    },\n    {\n      placement: 'left',\n      text: 'Left'\n    },\n    {\n      placement: 'right',\n      text: 'Right'\n    }\n  ]\n\n  return (\n    <Fragment>\n      {popovers.map((popover, i) => {\n        return <PopoverItem key={i} item={popover} id={i} />\n      })}\n    </Fragment>\n  )\n}\n\nexport default PopoverMulti\n"}}]);
//# sourceMappingURL=16.d649f57b.chunk.js.map