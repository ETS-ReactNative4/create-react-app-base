{"version":3,"sources":["styleGuide/examples/components/Carousel/CarouselCustomTag.js"],"names":["items","id","altText","caption","CarouselCustomTag","state","activeIndex","this","animating","nextIndex","length","setState","newIndex","_this2","slides","map","item","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","components_Common__WEBPACK_IMPORTED_MODULE_1__","className","tag","key","onExiting","onExited","timeout","captionText","captionHeader","react__WEBPACK_IMPORTED_MODULE_0__","next","previous","onClickHandler","index","goToIndex","direction","directionText","__webpack_exports__"],"mappings":"03BAIA,IAAMA,IAEFC,GAAI,EACJC,QAAS,UACTC,QAAS,YAGTF,GAAI,EACJC,QAAS,UACTC,QAAS,YAGTF,GAAI,EACJC,QAAS,UACTC,QAAS,YAIPC,qRACJC,OAAUC,YAAa,kEAGrBC,KAAKC,WAAY,qCAIjBD,KAAKC,WAAY,iCAIjB,IAAID,KAAKC,UAAT,CACA,IAAMC,EAAYF,KAAKF,MAAMC,cAAgBN,EAAMU,OAAS,EAAI,EAAIH,KAAKF,MAAMC,YAAc,EAC7FC,KAAKI,UAAWL,YAAaG,wCAI7B,IAAIF,KAAKC,UAAT,CACA,IAAMC,EAAuC,IAA3BF,KAAKF,MAAMC,YAAoBN,EAAMU,OAAS,EAAIH,KAAKF,MAAMC,YAAc,EAC7FC,KAAKI,UAAWL,YAAaG,uCAGrBG,GACJL,KAAKC,WACTD,KAAKI,UAAWL,YAAaM,qCAGtB,IAAAC,EAAAN,KACDO,EAASd,EAAMe,IAAI,SAAAC,GACvB,OACEC,EAAAC,EAAAC,cAACC,EAAA,GACCC,UAAU,aACVC,IAAI,MACJC,IAAKP,EAAKf,GACVuB,UAAW,kBAAMX,EAAKW,aACtBC,SAAU,kBAAMZ,EAAKY,YACrBC,QAAS,GACTT,EAAAC,EAAAC,cAACC,EAAA,GAAgBC,UAAU,cAAcM,YAAaX,EAAKb,QAASyB,cAAeZ,EAAKb,aAK9F,OACEc,EAAAC,EAAAC,cAACU,EAAA,SAAD,KACEZ,EAAAC,EAAAC,cAAA,qJAOAF,EAAAC,EAAAC,cAACC,EAAA,GACCd,YAAaC,KAAKF,MAAMC,YACxBwB,KAAM,kBAAMjB,EAAKiB,QACjBC,SAAU,kBAAMlB,EAAKkB,YACrBL,QAAS,GACTT,EAAAC,EAAAC,cAACC,EAAA,GACCpB,MAAOA,EACPM,YAAaC,KAAKF,MAAMC,YACxB0B,eAAgB,SAAAC,GAAA,OAASpB,EAAKqB,UAAUD,MAEzCnB,EACDG,EAAAC,EAAAC,cAACC,EAAA,GAAgBe,UAAU,OAAOC,cAAc,WAAWJ,eAAgB,kBAAMnB,EAAKkB,cACtFd,EAAAC,EAAAC,cAACC,EAAA,GAAgBe,UAAU,OAAOC,cAAc,OAAOJ,eAAgB,kBAAMnB,EAAKiB,wNAhE5DD,EAAA,eAuEhCQ,EAAA","file":"static/js/180.025c45d1.chunk.js","sourcesContent":["import React, { Fragment, PureComponent } from 'react'\n\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'components/Common'\n\nconst items = [\n  {\n    id: 1,\n    altText: 'Slide 1',\n    caption: 'Slide 1'\n  },\n  {\n    id: 2,\n    altText: 'Slide 2',\n    caption: 'Slide 2'\n  },\n  {\n    id: 3,\n    altText: 'Slide 3',\n    caption: 'Slide 3'\n  }\n]\n\nclass CarouselCustomTag extends PureComponent {\n  state = { activeIndex: 0 }\n\n  onExiting() {\n    this.animating = true\n  }\n\n  onExited() {\n    this.animating = false\n  }\n\n  next() {\n    if (this.animating) return\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  previous() {\n    if (this.animating) return\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const slides = items.map(item => {\n      return (\n        <CarouselItem\n          className=\"custom-tag\"\n          tag=\"div\"\n          key={item.id}\n          onExiting={() => this.onExiting()}\n          onExited={() => this.onExited()}\n          timeout={0}>\n          <CarouselCaption className=\"text-danger\" captionText={item.caption} captionHeader={item.caption} />\n        </CarouselItem>\n      )\n    })\n\n    return (\n      <Fragment>\n        <style>\n          {`.custom-tag {\n                max-width: 100%;\n                height: 500px;\n                background: black;\n              }`}\n        </style>\n        <Carousel\n          activeIndex={this.state.activeIndex}\n          next={() => this.next()}\n          previous={() => this.previous()}\n          timeout={0}>\n          <CarouselIndicators\n            items={items}\n            activeIndex={this.state.activeIndex}\n            onClickHandler={index => this.goToIndex(index)}\n          />\n          {slides}\n          <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={() => this.previous()} />\n          <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={() => this.next()} />\n        </Carousel>\n      </Fragment>\n    )\n  }\n}\n\nexport default CarouselCustomTag\n"],"sourceRoot":""}