{"version":3,"sources":["components/Global/LanguageSelector.js","components/Global/ThemeSelector.js","components/Auth/UserSettings.js"],"names":["LanguageSelector","state","__WEBPACK_IMPORTED_MODULE_0_react__","this","setState","prevState","dropdownOpen","_this2","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_2__GlobalContainer__","Consumer","context","__WEBPACK_IMPORTED_MODULE_1_components_Common__","isOpen","toggle","nav","props","inNavbar","caret","user","language","toUpperCase","right","onClick","updateUserByPropertyValue","defaultProps","__webpack_exports__","ThemeSelector","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_0_components_Common__","theme","__WEBPACK_IMPORTED_MODULE_2_components_Global_GlobalImporter__","stringNames","render","_ref","strings","userSettings","__WEBPACK_IMPORTED_MODULE_3_components_Global_LanguageSelector__","__WEBPACK_IMPORTED_MODULE_4_components_Global_ThemeSelector__"],"mappings":"0qBAMMA,sTACJC,4UAD6BC,EAAA,yDAc3BC,KAAKC,SAAS,SAAAC,GAAA,OACZC,cAAeD,EAAUC,iDAIpB,IAAAC,EAAAJ,KACP,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAuBC,SAAxB,KACG,SAAAC,GAAA,OACCL,EAAAC,EAAAC,cAACI,EAAA,GAASC,OAAQR,EAAKN,MAAMK,aAAcU,OAAQ,kBAAMT,EAAKS,UAAUC,IAAKV,EAAKW,MAAMD,IAAKE,UAAA,GAC3FX,EAAAC,EAAAC,cAACI,EAAA,GAAeG,IAAKV,EAAKW,MAAMD,IAAKG,OAAA,GAClCP,EAAQZ,MAAMoB,KAAKC,SAASC,eAE/Bf,EAAAC,EAAAC,cAACI,EAAA,GAAaU,MAAOjB,EAAKW,MAAMM,OAC9BhB,EAAAC,EAAAC,cAACI,EAAA,GAAaW,QAAS,kBAAMZ,EAAQZ,MAAMyB,0BAA0B,WAAY,QAAjF,WAGAlB,EAAAC,EAAAC,cAACI,EAAA,GAAaW,QAAS,kBAAMZ,EAAQZ,MAAMyB,0BAA0B,WAAY,QAAjF,qDA/BR1B,EAQG2B,cACLV,KAAK,EACLO,OAAO,GAgCXI,EAAA,2pBC3CMC,sTACJ5B,4UAD0B6B,EAAA,yDAIxB3B,KAAKC,SAAS,SAAAC,GAAA,OACZC,cAAeD,EAAUC,iDAIpB,IAAAC,EAAAJ,KACP,OACE4B,EAAAtB,EAAAC,cAACC,EAAA,EAAuBC,SAAxB,KACG,SAAAC,GAAA,OACCkB,EAAAtB,EAAAC,cAACsB,EAAA,GAASjB,OAAQR,EAAKN,MAAMK,aAAcU,OAAQ,kBAAMT,EAAKS,WAC5De,EAAAtB,EAAAC,cAACsB,EAAA,GAAeZ,OAAA,GAAOP,EAAQZ,MAAMoB,KAAKY,OAC1CF,EAAAtB,EAAAC,cAACsB,EAAA,EAAD,KACED,EAAAtB,EAAAC,cAACsB,EAAA,GAAaP,QAAS,kBAAMZ,EAAQZ,MAAMyB,0BAA0B,QAAS,YAA9E,UAGAK,EAAAtB,EAAAC,cAACsB,EAAA,GAAaP,QAAS,kBAAMZ,EAAQZ,MAAMyB,0BAA0B,QAAS,YAA9E,UAGAK,EAAAtB,EAAAC,cAACsB,EAAA,GAAaP,QAAS,kBAAMZ,EAAQZ,MAAMyB,0BAA0B,QAAS,cAA9E,YAGAK,EAAAtB,EAAAC,cAACsB,EAAA,GAAaP,QAAS,kBAAMZ,EAAQZ,MAAMyB,0BAA0B,QAAS,UAA9E,iDASdE,EAAA,2ICTAA,EAAA,QAvBqB,WACnB,OACEpB,EAAAC,EAAAC,cAACwB,EAAA,GACCC,aAAc,gBACdC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAAAD,EAAYhB,KAClBb,EAAAC,EAAAC,cAACR,EAAA,SAAD,KACEM,EAAAC,EAAAC,cAAA,UAAK4B,EAAQC,cACb/B,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAQwB,EAAQhB,UAChBd,EAAAC,EAAAC,cAAC8B,EAAA,GAAiBvB,KAAK,EAAOO,OAAO,KAEvChB,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAQwB,EAAQL,OAChBzB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD","file":"static/js/226.98fe6a7c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass LanguageSelector extends PureComponent {\n  state = {}\n\n  static propTypes = {\n    nav: PropTypes.bool,\n    right: PropTypes.bool\n  }\n\n  static defaultProps = {\n    nav: true,\n    right: true\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()} nav={this.props.nav} inNavbar>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.state.user.language.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu right={this.props.right}>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'en')}>\n                English\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'ja')}>\n                Japanese\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default LanguageSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/LanguageSelector.js","import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass ThemeSelector extends PureComponent {\n  state = {}\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()}>\n            <DropdownToggle caret>{context.state.user.theme}</DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'custom')}>\n                Custom\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'darkly')}>\n                Darkly\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'original')}>\n                Original\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'yeti')}>Yeti</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default ThemeSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/ThemeSelector.js","import React, { Fragment } from 'react'\n\nimport { Form, FormGroup, Label } from 'components/Common'\nimport GlobalImporter from 'components/Global/GlobalImporter'\nimport LanguageSelector from 'components/Global/LanguageSelector'\nimport ThemeSelector from 'components/Global/ThemeSelector'\n\nconst UserSettings = () => {\n  return (\n    <GlobalImporter\n      stringNames={['userSettings']}\n      render={({ strings, user }) => (\n        <Fragment>\n          <h1>{strings.userSettings}</h1>\n          <Form>\n            <FormGroup>\n              <Label>{strings.language}</Label>\n              <LanguageSelector nav={false} right={false} />\n            </FormGroup>\n            <FormGroup>\n              <Label>{strings.theme}</Label>\n              <ThemeSelector />\n            </FormGroup>\n          </Form>\n        </Fragment>\n      )}\n    />\n  )\n}\n\nexport default UserSettings\n\n// User Settings - Name, Email, Password, Language, Theme\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auth/UserSettings.js"],"sourceRoot":""}