{"version":3,"sources":["components/Global/ThemeSelector.js","components/Global/LanguageSelector.js","components/Global/Header.js","components/Auth/Login.js"],"names":["ThemeSelector","state","__WEBPACK_IMPORTED_MODULE_1_react__","this","setState","prevState","dropdownOpen","_this2","__WEBPACK_IMPORTED_MODULE_1_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_2__GlobalContainer__","Consumer","context","__WEBPACK_IMPORTED_MODULE_0_components_Common__","isOpen","toggle","nav","props","caret","user","theme","toUpperCase","onClick","updateUserByPropertyValue","defaultProps","__webpack_exports__","LanguageSelector","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_components_Common__","inNavbar","language","right","Header","_this","isLoginModalOpen","__WEBPACK_IMPORTED_MODULE_1_components_Global_GlobalContainer__","__WEBPACK_IMPORTED_MODULE_4_components_Common__","color","dark","fixed","expand","href","strings","routes","home","path","displayName","navbar","timeout","className","about","styleGuide","languageTester","todo","firstName","lastName","userSettings","divider","logOut","toggleLoginModal","logIn","__WEBPACK_IMPORTED_MODULE_3_components_Global_ThemeSelector__","__WEBPACK_IMPORTED_MODULE_2_components_Global_LanguageSelector__","__WEBPACK_IMPORTED_MODULE_5_components_Auth_Login__","Login","email","password","login","_callee","__WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator___default","wrap","_context","prev","next","sent","stop","__WEBPACK_IMPORTED_MODULE_2_react__","input","target","name","value","key","__WEBPACK_IMPORTED_MODULE_2_react___default","__WEBPACK_IMPORTED_MODULE_4_components_Global_GlobalImporter__","stringNames","render","_ref3","__WEBPACK_IMPORTED_MODULE_3_components_Global_GlobalContainer__","isAuthenticated","for","type","id","placeholder","required","autoFocus","onChange","e","onKeyDown","passworkKeyDown","check","remember","block","userIsValid","userNamePasswordInvalid"],"mappings":"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","file":"static/js/226.71e2063b.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass ThemeSelector extends PureComponent {\n  state = {}\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()}>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.state.user.theme.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'custom')}>\n                Custom\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'darkly')}>\n                Darkly\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'original')}>\n                Original\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('theme', 'yeti')}>Yeti</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nThemeSelector.defaultProps = {\n  nav: true\n}\n\nThemeSelector.propTypes = {\n  nav: PropTypes.bool\n}\n\nexport default ThemeSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/ThemeSelector.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'components/Common'\nimport { GlobalContainerContext } from './GlobalContainer'\n\nclass LanguageSelector extends PureComponent {\n  state = {}\n\n  static propTypes = {\n    nav: PropTypes.bool,\n    right: PropTypes.bool\n  }\n\n  static defaultProps = {\n    nav: true,\n    right: true\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.toggle()} nav={this.props.nav} inNavbar>\n            <DropdownToggle nav={this.props.nav} caret>\n              {context.state.user.language.toUpperCase()}\n            </DropdownToggle>\n            <DropdownMenu right={this.props.right}>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'en')}>\n                English\n              </DropdownItem>\n              <DropdownItem onClick={() => context.state.updateUserByPropertyValue('language', 'ja')}>\n                Japanese\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default LanguageSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/LanguageSelector.js","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from 'components/Global/GlobalContainer'\nimport LanguageSelector from 'components/Global/LanguageSelector'\nimport ThemeSelector from 'components/Global/ThemeSelector'\n\nimport {\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown\n} from 'components/Common'\nimport Login from 'components/Auth/Login'\n\nclass Header extends PureComponent {\n  state = {\n    isOpen: false\n  }\n\n  static propTypes = {\n    strings: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }))\n  }\n\n  toggleLoginModal() {\n    this.setState(prevState => ({\n      isLoginModalOpen: !prevState.isLoginModalOpen\n    }))\n  }\n\n  render() {\n    return (\n      <GlobalContainerContext.Consumer>\n        {context => (\n          <header>\n            <Navbar color=\"dark\" dark fixed=\"top\" expand=\"md\">\n              <NavbarBrand href={this.props.strings.routes.home.path}>\n                {this.props.strings.routes.home.displayName}\n              </NavbarBrand>\n              <NavbarToggler onClick={() => this.toggle()} />\n              <Collapse isOpen={this.state.isOpen} navbar timeout={0}>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.about.path}>\n                      {this.props.strings.routes.about.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.styleGuide.path}>\n                      {this.props.strings.routes.styleGuide.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.languageTester.path}>\n                      {this.props.strings.routes.languageTester.displayName}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href={this.props.strings.routes.todo.path}>\n                      {this.props.strings.routes.todo.displayName}\n                    </NavLink>\n                  </NavItem>\n                  {this.props.user.firstName ? (\n                    <UncontrolledDropdown nav inNavbar>\n                      <DropdownToggle nav caret>\n                        {this.props.user.firstName} {this.props.user.lastName}\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem href={this.props.strings.routes.userSettings.path}>\n                          {this.props.strings.routes.userSettings.displayName}\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem onClick={() => context.state.logOut()}>{this.props.strings.logOut}</DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  ) : (\n                    <NavItem>\n                      <span className=\"nav-link cursor-pointer\" onClick={() => this.toggleLoginModal()}>\n                        {this.props.strings.logIn}\n                      </span>\n                    </NavItem>\n                  )}\n                  <NavItem>\n                    <ThemeSelector />\n                  </NavItem>\n                  <LanguageSelector />\n                </Nav>\n              </Collapse>\n            </Navbar>`\n            <Modal isOpen={this.state.isLoginModalOpen} toggle={() => this.toggleLoginModal()}>\n              <ModalHeader toggle={() => this.toggleLoginModal()}>{this.props.strings.logIn}</ModalHeader>\n              <ModalBody>\n                <Login />\n              </ModalBody>\n            </Modal>\n          </header>\n        )}\n      </GlobalContainerContext.Consumer>\n    )\n  }\n}\n\nexport default Header\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Global/Header.js","import { Alert, Button, Form, FormGroup, Input, Label } from 'components/Common'\nimport React, { PureComponent } from 'react'\n\nimport { GlobalContainerContext } from 'components/Global/GlobalContainer'\nimport GlobalImporter from 'components/Global/GlobalImporter'\n\nclass Login extends PureComponent {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  onChange(input) {\n    this.setState({\n      [input.target.name]: input.target.value\n    })\n  }\n\n  login = async context => {\n    const userValid = await context.state.login({ email: this.state.email, password: this.state.password })\n    if (userValid) {\n      this.setState({\n        email: '',\n        password: ''\n      })\n    }\n  }\n\n  passworkKeyDown(input, context) {\n    if (input.key === 'Enter') {\n      this.login(context)\n    }\n  }\n\n  render() {\n    return (\n      <GlobalImporter\n        stringNames={['auth']}\n        render={({ strings, user }) => (\n          <GlobalContainerContext.Consumer>\n            {context => {\n              return !context.state.user.isAuthenticated ? (\n                <Form>\n                  <FormGroup>\n                    <Label for=\"inputEmail\">{strings.email}</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"inputEmail\"\n                      placeholder={strings.email}\n                      required=\"\"\n                      autoFocus=\"\"\n                      value={this.state.email}\n                      onChange={e => this.onChange(e)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"inputPassword\">{strings.password}</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"inputPassword\"\n                      placeholder={strings.password}\n                      required=\"\"\n                      value={this.state.password}\n                      onChange={e => this.onChange(e)}\n                      onKeyDown={e => this.passworkKeyDown(e, context)}\n                    />\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type=\"checkbox\" value=\"remember-me\" /> {strings.remember}\n                    </Label>\n                  </FormGroup>\n                  <Button block={true} className=\"mt-3\" color=\"primary\" onClick={() => this.login(context)}>\n                    {strings.logIn}\n                  </Button>\n                  {context.state.userIsValid === false && (\n                    <Alert color=\"danger\" className=\"mt-3\">\n                      {strings.userNamePasswordInvalid}\n                    </Alert>\n                  )}\n                </Form>\n              ) : (\n                <div className=\"text-center\">\n                  <Button onClick={() => context.state.logOut()}>\n                    {strings.logOut} {context.state.user.firstName} {context.state.user.lastName}\n                  </Button>\n                </div>\n              )\n            }}\n          </GlobalContainerContext.Consumer>\n        )}\n      />\n    )\n  }\n}\n\nexport default Login\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auth/Login.js"],"sourceRoot":""}