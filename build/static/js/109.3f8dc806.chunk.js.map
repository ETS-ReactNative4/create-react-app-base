{"version":3,"sources":["styleGuide/examples/components/Tooltip/TooltipMulti.js"],"names":["TooltipItem","state","tooltipOpen","this","setState","prevState","_this2","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","components_Common__WEBPACK_IMPORTED_MODULE_1__","className","color","id","props","item","text","placement","isOpen","target","toggle","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","map","tooltip","i","key"],"mappings":"83BAKMA,qRACJC,OACEC,aAAa,+DAYbC,KAAKC,SAAS,SAAAC,GAAA,OACZH,aAAcG,EAAUH,gDAInB,IAAAI,EAAAH,KACP,OACEI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,GAAOC,UAAU,OAAOC,MAAM,YAAYC,GAAI,WAAaV,KAAKW,MAAMD,IACpEV,KAAKW,MAAMC,KAAKC,MAEnBT,EAAAC,EAAAC,cAACC,EAAA,IACCO,UAAWd,KAAKW,MAAMC,KAAKE,UAC3BC,OAAQf,KAAKF,MAAMC,YACnBiB,OAAQ,WAAahB,KAAKW,MAAMD,GAChCO,OAAQ,kBAAMd,EAAKc,WAJrB,iOAzBkBC,EAAA,eAkE1BC,EAAA,QA7BqB,WAoBnB,OACEf,EAAAC,EAAAC,cAACY,EAAA,SAAD,OAlBEJ,UAAW,MACXD,KAAM,QAGNC,UAAW,SACXD,KAAM,WAGNC,UAAW,OACXD,KAAM,SAGNC,UAAW,QACXD,KAAM,UAMIO,IAAI,SAACC,EAASC,GACtB,OAAOlB,EAAAC,EAAAC,cAACT,GAAY0B,IAAKD,EAAGV,KAAMS,EAASX,GAAIY","file":"static/js/109.3f8dc806.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Fragment, PureComponent } from 'react'\n\nimport { Button, Tooltip } from 'components/Common'\n\nclass TooltipItem extends PureComponent {\n  state = {\n    tooltipOpen: false\n  }\n\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    item: PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right']).isRequired\n    })\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      tooltipOpen: !prevState.tooltipOpen\n    }))\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.item.text}\n        </Button>\n        <Tooltip\n          placement={this.props.item.placement}\n          isOpen={this.state.tooltipOpen}\n          target={'Tooltip-' + this.props.id}\n          toggle={() => this.toggle()}>\n          Tooltip Content!\n        </Tooltip>\n      </span>\n    )\n  }\n}\n\nconst TooltipMulti = () => {\n  const tooltips = [\n    {\n      placement: 'top',\n      text: 'Top'\n    },\n    {\n      placement: 'bottom',\n      text: 'Bottom'\n    },\n    {\n      placement: 'left',\n      text: 'Left'\n    },\n    {\n      placement: 'right',\n      text: 'Right'\n    }\n  ]\n\n  return (\n    <Fragment>\n      {tooltips.map((tooltip, i) => {\n        return <TooltipItem key={i} item={tooltip} id={i} />\n      })}\n    </Fragment>\n  )\n}\n\nexport default TooltipMulti\n"],"sourceRoot":""}